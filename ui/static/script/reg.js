document.addEventListener('DOMContentLoaded', () => {
    const toggleThemeButton = document.querySelector('.toggle-theme');
        const body = document.body;
        
    toggleThemeButton.addEventListener('click', () => {
            if (body.classList.contains('dark-mode')) {
                // Switch to light mode
                body.classList.remove('dark-mode');
                toggleThemeButton.textContent = 'üåô';
            } else {
                // Switch to dark mode
                body.classList.add('dark-mode');
                toggleThemeButton.textContent = '‚òÄÔ∏è';
            }
        });
    });
function togglePasswordVisibility() {
    const passwordInput = document.getElementById("password");
    const toggleButton = document.getElementById("togglePasswordBtn");

    if (passwordInput.type === "password") {
        passwordInput.type = "text";
        toggleButton.innerHTML = '(X)'
    } else {
        passwordInput.type = "password";
        toggleButton.innerHTML = '(O)'
    }
}
validateInput()
        function validateInput() {
            let email = document.getElementById('email').value;
            let password = document.getElementById('password').value;
            let confirmPassword = document.getElementById('confirmPassword').value;
            
            const validationBlockEmail = document.getElementById('validationBlockEmail');
            const validationBlockPassword = document.getElementById('validationBlockPassword');
            const validationBlockPasswordC = document.getElementById('validationBlockPasswordC');
            validationBlockEmail.innerHTML = ''; // –æ—á–∏—â–∞–µ–º –≤–∞–ª–∏–¥–∞—Ü–∏–æ–Ω–Ω—ã–π –±–ª–æ–∫ –ø–µ—Ä–µ–¥ –ø—Ä–æ–≤–µ—Ä–∫–æ–π
            validationBlockPassword.innerHTML = ''; // –æ—á–∏—â–∞–µ–º –≤–∞–ª–∏–¥–∞—Ü–∏–æ–Ω–Ω—ã–π –±–ª–æ–∫ –ø–µ—Ä–µ–¥ –ø—Ä–æ–≤–µ—Ä–∫–æ–π
            validationBlockPasswordC.innerHTML = ''; // –æ—á–∏—â–∞–µ–º –≤–∞–ª–∏–¥–∞—Ü–∏–æ–Ω–Ω—ã–π –±–ª–æ–∫ –ø–µ—Ä–µ–¥ –ø—Ä–æ–≤–µ—Ä–∫–æ–π

            // –í–∞–ª–∏–¥–∞—Ü–∏—è email
            if (!email) {
                validationBlockEmail.innerHTML += '<p>–ü–æ—á—Ç–∞ –æ–±—è–∑–∞—Ç–µ–ª—å–Ω–∞</p>';
            } else if (!validateEmail(email)) {
                validationBlockEmail.innerHTML += '<p>–ù–µ–≤–µ—Ä–Ω—ã–π —Ñ–æ—Ä–º–∞—Ç –ø–æ—á—Ç—ã</p>';
            }

            // –í–∞–ª–∏–¥–∞—Ü–∏—è –ø–∞—Ä–æ–ª—è
            if (!password) {
                validationBlockPassword.innerHTML += '<p>–ü–∞—Ä–æ–ª—å –æ–±—è–∑–∞—Ç–µ–ª–µ–Ω</p>';
            } else {
                if (!validatePasswordContainsUppercase(password)) {
                    validationBlockPassword.innerHTML += '<p>–•–æ—Ç—è –±—ã –æ–¥–Ω–∞ –±—É–∫–≤–∞ –≤—ã—Å—à–µ–≥–æ —Ä–µ–≥–∏—Å—Ç—Ä–∞</p>';
                }
                if (!validatePasswordContainsLowercase(password)) {
                    validationBlockPassword.innerHTML += '<p>–•–æ—Ç—è –±—ã –æ–¥–Ω–∞ –±—É–∫–≤–∞ –Ω–∏–∂–Ω–µ–≥–æ —Ä–µ–≥–∏—Å—Ç—Ä–∞</p>';
                }
                if (!validatePasswordContainsDigit(password)) {
                    validationBlockPassword.innerHTML += '<p>–•–æ—Ç—è –±—ã –æ–¥–Ω–∞ —Ü–∏—Ñ—Ä–∞</p>';
                }
                if (!validatePasswordContainsSpecialChar(password)) {
                    validationBlockPassword.innerHTML += '<p>–•–æ—Ç—è –±—ã –æ–¥–∏–Ω —Å–ø–µ—Ü–∏–∞–ª—å–Ω—ã–π —Å–∏–º–≤–æ–ª</p>';
                }
                if (!validateLatin(password)) {
                    validationBlockPassword.innerHTML += '<p>–¢–æ–ª—å–∫–æ –ª–∞—Ç–∏–Ω—Å–∫–∏–µ –±—É–∫–≤—ã</p>';
                }
                if (password.length < 8) {
                    validationBlockPassword.innerHTML += '<p>–•–æ—Ç—è –±—ã 8 —Å–∏–º–≤–æ–ª–æ–≤</p>';
                }
            }

            if (password !== confirmPassword) {
                validationBlockPasswordC.innerHTML += '<p>–ü–∞—Ä–æ–ª–∏ –Ω–µ —Å–æ–≤–ø–∞–¥–∞—é—Ç</p>';
            }
            if ((validationBlockEmail.innerHTML !== '') || (validationBlockPassword.innerHTML !== '') || (validationBlockPasswordC.innerHTML !== '')) {
                submitButton.disabled = true
                submitButton.style.backgroundColor = 'gray'
            } else {
                submitButton.disabled = false
                submitButton.style.backgroundColor = 'blue'
            }
        }
        function validateLatin(password) {
            var nonLatinPattern = /[^a-zA-Z\s\d!@#$%^&*()-=_+[\]{}|;':",.<>/?\\]/;
            return !nonLatinPattern.test(password);
}

        function validatePasswordContainsUppercase(password) {
            return /[A-Z]/.test(password);
        }

        function validatePasswordContainsLowercase(password) {
            return /[a-z]/.test(password);
        }

        function validatePasswordContainsDigit(password) {
            return /\d/.test(password);
        }

        function validatePasswordContainsSpecialChar(password) {
            return /[!@#$%^&*()_+\-=[\]{};':"\\|,.<>/?]/.test(password);
        }

        function validateEmail(email) {
            const re = /^[a-zA-Z0-9._%+-]+@[a-zA-Z0-9.-]+\.[a-zA-Z]{2,4}$/;
            return re.test(String(email).toLowerCase());
        }

        function submit() {
            let email = document.getElementById('email').value;
            let password = document.getElementById('password').value;
            let confirmPassword = document.getElementById('confirmPassword').value;
            let role = document.getElementById('role').value;

            const data = {
                email: email,
                password: password,
                confirmPassword: confirmPassword,
                role: role
            };

            const loading = document.getElementById('loading');
            const submitButton = document.getElementById('submitButton');

            loading.style.display = 'block';  // –ø–æ–∫–∞–∑–∞—Ç—å –∏–Ω–¥–∏–∫–∞—Ç–æ—Ä –∑–∞–≥—Ä—É–∑–∫–∏
            submitButton.disabled = true;     // –¥–µ–∞–∫—Ç–∏–≤–∏—Ä–æ–≤–∞—Ç—å –∫–Ω–æ–ø–∫—É –æ—Ç–ø—Ä–∞–≤–∫–∏

            fetch("api/reg", {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json'
                },
                body: JSON.stringify(data)
            })
                .then(response => {
                    loading.style.display = 'none'; // —Å–∫—Ä—ã—Ç—å –∏–Ω–¥–∏–∫–∞—Ç–æ—Ä –∑–∞–≥—Ä—É–∑–∫–∏
                    submitButton.disabled = false;  // –∞–∫—Ç–∏–≤–∏—Ä–æ–≤–∞—Ç—å –∫–Ω–æ–ø–∫—É –æ—Ç–ø—Ä–∞–≤–∫–∏

                    return response.json().then(json => {
                        if (!response.ok) {
                            throw new Error(`${response.status}: ${json.message}`);
                        }
                        return json;
                    });
                })
                .then(data => {
                    // alert(data.message || '–£—Å–ø–µ—à–Ω–∞—è —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è'); // –≤—ã–≤–æ–¥–∏–º —Å–æ–æ–±—â–µ–Ω–∏–µ –∏–∑ –æ—Ç–≤–µ—Ç–∞ –∏–ª–∏ —Å—Ç–∞–Ω–¥–∞—Ä—Ç–Ω–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ
                    
                    showPopupNotification(data.message)
                    
                })
                .catch(error => {
                    showPopupNotification(error.message);
                });
        }
        function showPopupNotification(message) {
            const popupNotification = document.getElementById('popupNotification');
            const popupMessage = document.getElementById('popupMessage');

            popupMessage.textContent = message;
            popupNotification.style.display = 'block';

            setTimeout(() => {
                closePopupNotification();
            }, 4000); 
        }

        function closePopupNotification() {
            const popupNotification = document.getElementById('popupNotification');
            popupNotification.style.display = 'none';
        }



