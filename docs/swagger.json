{
    "schemes": [
        "http"
    ],
    "swagger": "2.0",
    "info": {
        "description": "This is a test-backend-RESTful-API for managing movies, seasons, episodes and etc.",
        "title": "ozinshe-api-test",
        "contact": {
            "name": "Adilhan",
            "email": "bigxxby@yandex.ru"
        }
    },
    "host": "localhost:8080",
    "basePath": "/",
    "paths": {
        "/api/age-categories": {
            "get": {
                "description": "Retrieves all age categories",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "ageCategory"
                ],
                "summary": "Get all age categories",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/age.AgeCategory"
                            }
                        }
                    },
                    "404": {
                        "description": "Age categories not found",
                        "schema": {
                            "type": "objects"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/routes.DefaultMessageResponse"
                        }
                    }
                }
            },
            "post": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Creates a new age category",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "ageCategory"
                ],
                "summary": "Create a new age category",
                "parameters": [
                    {
                        "description": "Age Category",
                        "name": "ageCategory",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/routes.AgeCategoryRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Age category created",
                        "schema": {
                            "$ref": "#/definitions/routes.DefaultMessageResponse"
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "schema": {
                            "$ref": "#/definitions/routes.DefaultMessageResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/routes.DefaultMessageResponse"
                        }
                    },
                    "409": {
                        "description": "Age category already exists",
                        "schema": {
                            "$ref": "#/definitions/routes.DefaultMessageResponse"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/routes.DefaultMessageResponse"
                        }
                    }
                }
            }
        },
        "/api/age-categories/{id}": {
            "get": {
                "description": "Retrieves an age category with the specified ID",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "ageCategory"
                ],
                "summary": "Get an age category by ID",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Age Category ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/age.AgeCategory"
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "schema": {
                            "$ref": "#/definitions/routes.DefaultMessageResponse"
                        }
                    },
                    "404": {
                        "description": "Age category not found",
                        "schema": {
                            "$ref": "#/definitions/routes.DefaultMessageResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/routes.DefaultMessageResponse"
                        }
                    }
                }
            },
            "put": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Updates an age category with the specified ID",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "ageCategory"
                ],
                "summary": "Update an age category",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Age Category ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Age Category",
                        "name": "ageCategory",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/routes.AgeCategoryRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Category Updated",
                        "schema": {
                            "$ref": "#/definitions/routes.DefaultMessageResponse"
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "schema": {
                            "$ref": "#/definitions/routes.DefaultMessageResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/routes.DefaultMessageResponse"
                        }
                    },
                    "404": {
                        "description": "Age category Not found",
                        "schema": {
                            "$ref": "#/definitions/routes.DefaultMessageResponse"
                        }
                    },
                    "409": {
                        "description": "Age Category with this name already exists",
                        "schema": {
                            "$ref": "#/definitions/routes.DefaultMessageResponse"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/routes.DefaultMessageResponse"
                        }
                    }
                }
            },
            "delete": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Deletes an age category with the specified ID",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "ageCategory"
                ],
                "summary": "Delete an age category",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Age Category ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Category Deleted",
                        "schema": {
                            "$ref": "#/definitions/routes.DefaultMessageResponse"
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "schema": {
                            "$ref": "#/definitions/routes.DefaultMessageResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/routes.DefaultMessageResponse"
                        }
                    },
                    "404": {
                        "description": "Age category Not found",
                        "schema": {
                            "$ref": "#/definitions/routes.DefaultMessageResponse"
                        }
                    },
                    "409": {
                        "description": "Age category is Used in movies",
                        "schema": {
                            "$ref": "#/definitions/routes.DefaultMessageResponse"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/routes.DefaultMessageResponse"
                        }
                    }
                }
            }
        },
        "/api/categories": {
            "get": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Retrieves all categories",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "categories"
                ],
                "summary": "Get all categories",
                "responses": {
                    "200": {
                        "description": "Categories Retrieved",
                        "schema": {
                            "$ref": "#/definitions/routes.DefaultMessageResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/routes.DefaultMessageResponse"
                        }
                    },
                    "404": {
                        "description": "Categories not found",
                        "schema": {
                            "$ref": "#/definitions/routes.DefaultMessageResponse"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/routes.DefaultMessageResponse"
                        }
                    }
                }
            },
            "post": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Creates a new category",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "categories"
                ],
                "summary": "Create a category",
                "parameters": [
                    {
                        "description": "Category object to be created",
                        "name": "category",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/routes.CategoryRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Category Created",
                        "schema": {
                            "$ref": "#/definitions/routes.DefaultMessageResponse"
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "schema": {
                            "$ref": "#/definitions/routes.DefaultMessageResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/routes.DefaultMessageResponse"
                        }
                    },
                    "409": {
                        "description": "Category already exists",
                        "schema": {
                            "$ref": "#/definitions/routes.DefaultMessageResponse"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/routes.DefaultMessageResponse"
                        }
                    }
                }
            }
        },
        "/api/categories/{id}": {
            "get": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Retrieves the category with the specified ID",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "categories"
                ],
                "summary": "Get a category",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Category ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Category Retrieved",
                        "schema": {
                            "$ref": "#/definitions/routes.DefaultMessageResponse"
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "schema": {
                            "$ref": "#/definitions/routes.DefaultMessageResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/routes.DefaultMessageResponse"
                        }
                    },
                    "404": {
                        "description": "Category not found",
                        "schema": {
                            "$ref": "#/definitions/routes.DefaultMessageResponse"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/routes.DefaultMessageResponse"
                        }
                    }
                }
            },
            "put": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Updates an existing category",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "categories"
                ],
                "summary": "Update a category",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Category ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Updated category object",
                        "name": "category",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/routes.CategoryRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Category Updated",
                        "schema": {
                            "$ref": "#/definitions/routes.DefaultMessageResponse"
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "schema": {
                            "$ref": "#/definitions/routes.DefaultMessageResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/routes.DefaultMessageResponse"
                        }
                    },
                    "404": {
                        "description": "Category Not found",
                        "schema": {
                            "$ref": "#/definitions/routes.DefaultMessageResponse"
                        }
                    },
                    "409": {
                        "description": "Category with this name already exists",
                        "schema": {
                            "$ref": "#/definitions/routes.DefaultMessageResponse"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/routes.DefaultMessageResponse"
                        }
                    }
                }
            },
            "delete": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Deletes a category with the specified ID",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "categories"
                ],
                "summary": "Delete a category",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Category ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Category Deleted",
                        "schema": {
                            "$ref": "#/definitions/routes.DefaultMessageResponse"
                        }
                    },
                    "400": {
                        "description": "Cannot delete category because it is used in movies",
                        "schema": {
                            "$ref": "#/definitions/routes.DefaultMessageResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/routes.DefaultMessageResponse"
                        }
                    },
                    "404": {
                        "description": "Category not found",
                        "schema": {
                            "$ref": "#/definitions/routes.DefaultMessageResponse"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/routes.DefaultMessageResponse"
                        }
                    }
                }
            }
        },
        "/api/change-password": {
            "post": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Changes the password of the authenticated user",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "passwordChange"
                ],
                "summary": "Change user password",
                "parameters": [
                    {
                        "description": "Password change data",
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/routes.ChangePasswordRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Password updated",
                        "schema": {
                            "$ref": "#/definitions/routes.DefaultMessageResponse"
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "schema": {
                            "$ref": "#/definitions/routes.DefaultMessageResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/routes.DefaultMessageResponse"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/routes.DefaultMessageResponse"
                        }
                    }
                }
            }
        },
        "/api/check-auth": {
            "post": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Check user authentication and return user role",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "authentication"
                ],
                "summary": "Check authentication",
                "responses": {
                    "200": {
                        "description": "Successfully checked authentication",
                        "schema": {
                            "$ref": "#/definitions/routes.DefaultMessageResponse"
                        }
                    }
                }
            }
        },
        "/api/episodes/season/{id}/clear": {
            "delete": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Deletes all episodes belonging to the specified season",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "episodes"
                ],
                "summary": "Delete all episodes of a season",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Season ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "All episodes of selected season deleted",
                        "schema": {
                            "$ref": "#/definitions/routes.DefaultMessageResponse"
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "schema": {
                            "$ref": "#/definitions/routes.DefaultMessageResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/routes.DefaultMessageResponse"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/routes.DefaultMessageResponse"
                        }
                    }
                }
            }
        },
        "/api/episodes/season/{id}/{episodeNumber}": {
            "delete": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Deletes an episode with the specified number from the current season. (NOTE: deletes ALL episodes of selected number, including duplicates)",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "episodes"
                ],
                "summary": "Delete an episode of the current season",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Season ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "description": "Episode number",
                        "name": "episodeNumber",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Episode numbers of selected season deleted",
                        "schema": {
                            "$ref": "#/definitions/routes.DefaultMessageResponse"
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "schema": {
                            "$ref": "#/definitions/routes.DefaultMessageResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/routes.DefaultMessageResponse"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/routes.DefaultMessageResponse"
                        }
                    }
                }
            }
        },
        "/api/episodes/{id}": {
            "get": {
                "description": "Retrieves an episode with the specified ID",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "episodes"
                ],
                "summary": "Retrieve an episode",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Episode ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Episode",
                        "schema": {
                            "$ref": "#/definitions/episode.Episode"
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "schema": {
                            "$ref": "#/definitions/routes.DefaultMessageResponse"
                        }
                    },
                    "404": {
                        "description": "Episode not found",
                        "schema": {
                            "$ref": "#/definitions/routes.DefaultMessageResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/routes.DefaultMessageResponse"
                        }
                    }
                }
            },
            "put": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Updates episode by its ID",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "episodes"
                ],
                "summary": "Updates episode",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Episode ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Episode data",
                        "name": "episode",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/routes.EpisodeRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Episode updated",
                        "schema": {
                            "$ref": "#/definitions/routes.DefaultMessageResponse"
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "schema": {
                            "$ref": "#/definitions/routes.DefaultMessageResponse"
                        }
                    },
                    "404": {
                        "description": "Episode not found",
                        "schema": {
                            "$ref": "#/definitions/routes.DefaultMessageResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/routes.DefaultMessageResponse"
                        }
                    }
                }
            },
            "post": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Creates a single episode for the specified season",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "episodes"
                ],
                "summary": "Create episode",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Season ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Episode",
                        "name": "episode",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/routes.EpisodeRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Episode added",
                        "schema": {
                            "$ref": "#/definitions/routes.DefaultMessageResponse"
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "schema": {
                            "$ref": "#/definitions/routes.DefaultMessageResponse"
                        }
                    },
                    "404": {
                        "description": "Season not found",
                        "schema": {
                            "$ref": "#/definitions/routes.DefaultMessageResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/routes.DefaultMessageResponse"
                        }
                    }
                }
            },
            "delete": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Deletes an episode with the specified ID",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "episodes"
                ],
                "summary": "Delete an episode",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Episode ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Episode deleted",
                        "schema": {
                            "$ref": "#/definitions/routes.DefaultMessageResponse"
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "schema": {
                            "$ref": "#/definitions/routes.DefaultMessageResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/routes.DefaultMessageResponse"
                        }
                    },
                    "404": {
                        "description": "Episode Not Found",
                        "schema": {
                            "$ref": "#/definitions/routes.DefaultMessageResponse"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/routes.DefaultMessageResponse"
                        }
                    }
                }
            }
        },
        "/api/episodes/{id}/multiple": {
            "post": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Creates multiple episodes for the specified season",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "episodes"
                ],
                "summary": "Create episodes",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Season ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Episodes",
                        "name": "episodes",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/episodes.EpisodeRequestBody"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Multiple Episodes added",
                        "schema": {
                            "$ref": "#/definitions/routes.DefaultMessageResponse"
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "schema": {
                            "$ref": "#/definitions/routes.DefaultMessageResponse"
                        }
                    },
                    "404": {
                        "description": "Season not found",
                        "schema": {
                            "$ref": "#/definitions/routes.DefaultMessageResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/routes.DefaultMessageResponse"
                        }
                    }
                }
            }
        },
        "/api/favorites/": {
            "get": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Get all favorite movies of an auth. user",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "favorites"
                ],
                "summary": "Get favorite movies",
                "responses": {
                    "200": {
                        "description": "Favorites",
                        "schema": {
                            "$ref": "#/definitions/routes.DefaultMessageResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorised",
                        "schema": {
                            "$ref": "#/definitions/routes.DefaultMessageResponse"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/routes.DefaultMessageResponse"
                        }
                    }
                }
            }
        },
        "/api/favorites/clear": {
            "delete": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Deletes all favorite movies from auth. user's favorites",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "favorites"
                ],
                "summary": "Deletes all favorite movies",
                "responses": {
                    "200": {
                        "description": "Favorites Cleared",
                        "schema": {
                            "$ref": "#/definitions/routes.DefaultMessageResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorised",
                        "schema": {
                            "$ref": "#/definitions/routes.DefaultMessageResponse"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/routes.DefaultMessageResponse"
                        }
                    }
                }
            }
        },
        "/api/favorites/{id}": {
            "post": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Adds a movie with the specified ID to the favorites list of the authenticated user",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "favorites"
                ],
                "summary": "Adds a movie to favorites",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "ID of the movie to add to favorites",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Movie added to favorites",
                        "schema": {
                            "$ref": "#/definitions/routes.DefaultMessageResponse"
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "schema": {
                            "$ref": "#/definitions/routes.DefaultMessageResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorised",
                        "schema": {
                            "$ref": "#/definitions/routes.DefaultMessageResponse"
                        }
                    },
                    "404": {
                        "description": "Movie not found",
                        "schema": {
                            "$ref": "#/definitions/routes.DefaultMessageResponse"
                        }
                    },
                    "409": {
                        "description": "Movie already added to favorites by this user",
                        "schema": {
                            "$ref": "#/definitions/routes.DefaultMessageResponse"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/routes.DefaultMessageResponse"
                        }
                    }
                }
            },
            "delete": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Deletes favorite movie from auth. user's favorites",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "favorites"
                ],
                "summary": "Deletes favorite movie by favorite ID",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Movie id",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Favorite Deleted",
                        "schema": {
                            "$ref": "#/definitions/routes.DefaultMessageResponse"
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "schema": {
                            "$ref": "#/definitions/routes.DefaultMessageResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorised",
                        "schema": {
                            "$ref": "#/definitions/routes.DefaultMessageResponse"
                        }
                    },
                    "404": {
                        "description": "No such movie added to favorites",
                        "schema": {
                            "$ref": "#/definitions/routes.DefaultMessageResponse"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/routes.DefaultMessageResponse"
                        }
                    }
                }
            }
        },
        "/api/genres": {
            "get": {
                "description": "Retrieves all genres",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "genres"
                ],
                "summary": "Get all genres",
                "responses": {
                    "200": {
                        "description": "Successful response",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/genres.Genre"
                            }
                        }
                    },
                    "404": {
                        "description": "No genres added",
                        "schema": {
                            "$ref": "#/definitions/routes.DefaultMessageResponse"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/routes.DefaultMessageResponse"
                        }
                    }
                }
            },
            "post": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Creates a new genre if the user has admin privileges",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "genres"
                ],
                "summary": "Create a new genre",
                "parameters": [
                    {
                        "description": "Genre object",
                        "name": "genre",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/genres.GenreShort"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful creation",
                        "schema": {
                            "$ref": "#/definitions/routes.DefaultMessageResponse"
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "schema": {
                            "$ref": "#/definitions/routes.DefaultMessageResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/routes.DefaultMessageResponse"
                        }
                    },
                    "409": {
                        "description": "Genre with this name already exists",
                        "schema": {
                            "$ref": "#/definitions/routes.DefaultMessageResponse"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/routes.DefaultMessageResponse"
                        }
                    }
                }
            }
        },
        "/api/genres/{id}": {
            "get": {
                "description": "Retrieves a genre by its ID",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "genres"
                ],
                "summary": "Get a genre by ID",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Genre ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful response",
                        "schema": {
                            "$ref": "#/definitions/genres.Genre"
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "schema": {
                            "$ref": "#/definitions/routes.DefaultMessageResponse"
                        }
                    },
                    "404": {
                        "description": "Genre not found",
                        "schema": {
                            "$ref": "#/definitions/routes.DefaultMessageResponse"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/routes.DefaultMessageResponse"
                        }
                    }
                }
            },
            "put": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Updates a genre by its ID if the user has admin privileges",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "genres"
                ],
                "summary": "Update a genre",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Genre ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Genre object",
                        "name": "genre",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/genres.GenreShort"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful update",
                        "schema": {
                            "$ref": "#/definitions/routes.DefaultMessageResponse"
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "schema": {
                            "$ref": "#/definitions/routes.DefaultMessageResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/routes.DefaultMessageResponse"
                        }
                    },
                    "404": {
                        "description": "Genre Not found",
                        "schema": {
                            "$ref": "#/definitions/routes.DefaultMessageResponse"
                        }
                    },
                    "409": {
                        "description": "Genre with this name already exists",
                        "schema": {
                            "$ref": "#/definitions/routes.DefaultMessageResponse"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/routes.DefaultMessageResponse"
                        }
                    }
                }
            },
            "delete": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Deletes a genre by its ID if the user has admin privileges",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "genres"
                ],
                "summary": "Delete a genre",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Genre ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful deletion",
                        "schema": {
                            "$ref": "#/definitions/routes.DefaultMessageResponse"
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "schema": {
                            "$ref": "#/definitions/routes.DefaultMessageResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/routes.DefaultMessageResponse"
                        }
                    },
                    "404": {
                        "description": "Genre not found",
                        "schema": {
                            "$ref": "#/definitions/routes.DefaultMessageResponse"
                        }
                    },
                    "409": {
                        "description": "Genre is used in other movies",
                        "schema": {
                            "$ref": "#/definitions/routes.DefaultMessageResponse"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/routes.DefaultMessageResponse"
                        }
                    }
                }
            }
        },
        "/api/movies": {
            "get": {
                "description": "Retrieves movies for a user",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "movies"
                ],
                "summary": "Get all movies",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Limit",
                        "name": "limit",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/routes.ManyMoviesResponse"
                        }
                    },
                    "400": {
                        "description": "Invalid limit parameter",
                        "schema": {
                            "$ref": "#/definitions/routes.DefaultMessageResponse"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/routes.DefaultMessageResponse"
                        }
                    }
                }
            },
            "post": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Creates a new movie with provided details",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "movies"
                ],
                "summary": "Create a new movie",
                "parameters": [
                    {
                        "description": "Movie object",
                        "name": "movie",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/routes.MovieCreateRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Movie Created",
                        "schema": {
                            "$ref": "#/definitions/routes.DefaultMessageResponse"
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "schema": {
                            "$ref": "#/definitions/routes.DefaultMessageResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/routes.DefaultMessageResponse"
                        }
                    },
                    "404": {
                        "description": "Category not found",
                        "schema": {
                            "$ref": "#/definitions/routes.DefaultMessageResponse"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/routes.DefaultMessageResponse"
                        }
                    }
                }
            }
        },
        "/api/movies/age-category/{id}": {
            "put": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Updates the age category of a movie with the specified ID",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "movies"
                ],
                "summary": "Update movie age category",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Movie ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Age Category Name",
                        "name": "ageCategoryName",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Movie ageCategory updated",
                        "schema": {
                            "$ref": "#/definitions/routes.DefaultMessageResponse"
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "schema": {
                            "$ref": "#/definitions/routes.DefaultMessageResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/routes.DefaultMessageResponse"
                        }
                    },
                    "404": {
                        "description": "Movie not found",
                        "schema": {
                            "$ref": "#/definitions/routes.DefaultMessageResponse"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/routes.DefaultMessageResponse"
                        }
                    }
                }
            }
        },
        "/api/movies/by-age-category": {
            "get": {
                "description": "Retrieves every movie categorized by age category",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "query"
                ],
                "summary": "Get every movie by age category",
                "responses": {
                    "200": {
                        "description": "Successful response",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/definitions/movie.MovieShort"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/routes.DefaultMessageResponse"
                        }
                    }
                }
            }
        },
        "/api/movies/by-category": {
            "get": {
                "description": "Retrieves every movie categorized by category",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "query"
                ],
                "summary": "Get every movie by category",
                "responses": {
                    "200": {
                        "description": "Successful response",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/definitions/movie.MovieShort"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/routes.DefaultMessageResponse"
                        }
                    }
                }
            }
        },
        "/api/movies/by-genre": {
            "get": {
                "description": "Retrieves every movie categorized by genre",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "query"
                ],
                "summary": "Get every movie by genre",
                "responses": {
                    "200": {
                        "description": "Successful response",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/definitions/movie.MovieShort"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/routes.DefaultMessageResponse"
                        }
                    }
                }
            }
        },
        "/api/movies/category/{id}": {
            "put": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Updates the category of a movie with the specified ID",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "movies"
                ],
                "summary": "Update movie category",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Movie ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Category Name",
                        "name": "categoryName",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Movie category updated",
                        "schema": {
                            "$ref": "#/definitions/routes.DefaultMessageResponse"
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "schema": {
                            "$ref": "#/definitions/routes.DefaultMessageResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/routes.DefaultMessageResponse"
                        }
                    },
                    "404": {
                        "description": "Movie not found",
                        "schema": {
                            "$ref": "#/definitions/routes.DefaultMessageResponse"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/routes.DefaultMessageResponse"
                        }
                    }
                }
            }
        },
        "/api/movies/data/{id}": {
            "put": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Updates the data of a movie with the specified ID",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "movies"
                ],
                "summary": "Update movie data",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Movie ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Movie Data",
                        "name": "movieData",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/routes.MovieDataRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Movie data updated",
                        "schema": {
                            "$ref": "#/definitions/routes.DefaultMessageResponse"
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "schema": {
                            "$ref": "#/definitions/routes.DefaultMessageResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/routes.DefaultMessageResponse"
                        }
                    },
                    "404": {
                        "description": "Movie not found",
                        "schema": {
                            "$ref": "#/definitions/routes.DefaultMessageResponse"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/routes.DefaultMessageResponse"
                        }
                    }
                }
            }
        },
        "/api/movies/genres/{id}": {
            "put": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Updates the genres of a movie with the specified ID",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "movies"
                ],
                "summary": "Update movie genres",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Movie ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Genres",
                        "name": "genres",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/routes.MovieGenresRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Genres Updated",
                        "schema": {
                            "$ref": "#/definitions/routes.DefaultMessageResponse"
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "schema": {
                            "$ref": "#/definitions/routes.DefaultMessageResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/routes.DefaultMessageResponse"
                        }
                    },
                    "404": {
                        "description": "Genre does not exist",
                        "schema": {
                            "$ref": "#/definitions/routes.DefaultMessageResponse"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/routes.DefaultMessageResponse"
                        }
                    }
                }
            }
        },
        "/api/movies/search": {
            "get": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Search movies based on a query string, (searches by name and keywords)",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "query"
                ],
                "summary": "Search movies",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Search query",
                        "name": "query",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful response",
                        "schema": {
                            "$ref": "#/definitions/routes.ManyMoviesResponse"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/routes.DefaultMessageResponse"
                        }
                    }
                }
            }
        },
        "/api/movies/watch/{id}": {
            "post": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Records a user watching a movie",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "movies"
                ],
                "summary": "Watch a movie",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Movie ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "schema": {
                            "$ref": "#/definitions/routes.DefaultMessageResponse"
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "schema": {
                            "$ref": "#/definitions/routes.DefaultMessageResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/routes.DefaultMessageResponse"
                        }
                    },
                    "404": {
                        "description": "Movie not found",
                        "schema": {
                            "$ref": "#/definitions/routes.DefaultMessageResponse"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/routes.DefaultMessageResponse"
                        }
                    }
                }
            }
        },
        "/api/movies/{id}": {
            "get": {
                "description": "Retrieves details of a specific movie including its seasons and similar movies",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "movies"
                ],
                "summary": "Get movie details",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Movie ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/routes.MovieResponse"
                        }
                    },
                    "400": {
                        "description": "Invalid movie ID",
                        "schema": {
                            "$ref": "#/definitions/routes.DefaultMessageResponse"
                        }
                    },
                    "404": {
                        "description": "Movie not found",
                        "schema": {
                            "$ref": "#/definitions/routes.DefaultMessageResponse"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/routes.DefaultMessageResponse"
                        }
                    }
                }
            },
            "delete": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Deletes a movie with the specified ID",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "movies"
                ],
                "summary": "Delete a movie",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Movie ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Movie Deleted",
                        "schema": {
                            "$ref": "#/definitions/routes.DefaultMessageResponse"
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "schema": {
                            "$ref": "#/definitions/routes.DefaultMessageResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/routes.DefaultMessageResponse"
                        }
                    },
                    "404": {
                        "description": "Movie not found",
                        "schema": {
                            "$ref": "#/definitions/routes.DefaultMessageResponse"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/routes.DefaultMessageResponse"
                        }
                    }
                }
            }
        },
        "/api/posters/movie/{id}": {
            "delete": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Delete a poster by movie ID",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "posters"
                ],
                "summary": "Deletes a poster of a movie",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Movie ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "message\": \"Posters of a Movie Deleted",
                        "schema": {
                            "$ref": "#/definitions/routes.DefaultMessageResponse"
                        }
                    },
                    "400": {
                        "description": "message\": \"Bad request",
                        "schema": {
                            "$ref": "#/definitions/routes.DefaultMessageResponse"
                        }
                    },
                    "401": {
                        "description": "message\": \"Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/routes.DefaultMessageResponse"
                        }
                    },
                    "500": {
                        "description": "message\": \"Internal server error",
                        "schema": {
                            "$ref": "#/definitions/routes.DefaultMessageResponse"
                        }
                    }
                }
            }
        },
        "/api/posters/{id}": {
            "get": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Gets posters by Movie Id",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "posters"
                ],
                "summary": "Get posters",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Movie ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "message\": \"Posters",
                        "schema": {
                            "$ref": "#/definitions/routes.DefaultMessageResponse"
                        }
                    },
                    "400": {
                        "description": "message\": \"Bad request",
                        "schema": {
                            "$ref": "#/definitions/routes.DefaultMessageResponse"
                        }
                    },
                    "404": {
                        "description": "message\": \"Poster not found",
                        "schema": {
                            "$ref": "#/definitions/routes.DefaultMessageResponse"
                        }
                    },
                    "500": {
                        "description": "message\": \"Internal server error",
                        "schema": {
                            "$ref": "#/definitions/routes.DefaultMessageResponse"
                        }
                    }
                }
            },
            "post": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Creates posters for Movie Id (Only 5, next posters after 5 will be ignored)",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "posters"
                ],
                "summary": "Create posters",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Movie ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Posters",
                        "name": "poster",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/routes.PostersBodyRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "message\":\t\"Posters added",
                        "schema": {
                            "$ref": "#/definitions/routes.DefaultMessageResponse"
                        }
                    },
                    "400": {
                        "description": "message\":\t\"Bad request",
                        "schema": {
                            "$ref": "#/definitions/routes.DefaultMessageResponse"
                        }
                    },
                    "404": {
                        "description": "message\":\t\"Movie not found",
                        "schema": {
                            "$ref": "#/definitions/routes.DefaultMessageResponse"
                        }
                    },
                    "500": {
                        "description": "message\":\t\"Internal server error",
                        "schema": {
                            "$ref": "#/definitions/routes.DefaultMessageResponse"
                        }
                    }
                }
            },
            "delete": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Delete a poster by its ID",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Posters"
                ],
                "summary": "Deletes a poster",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Poster ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "message\": \"Posters Deleted",
                        "schema": {
                            "$ref": "#/definitions/routes.DefaultMessageResponse"
                        }
                    },
                    "400": {
                        "description": "message\": \"Bad request",
                        "schema": {
                            "$ref": "#/definitions/routes.DefaultMessageResponse"
                        }
                    },
                    "401": {
                        "description": "message\": \"Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/routes.DefaultMessageResponse"
                        }
                    },
                    "404": {
                        "description": "message\": \"Poster not found",
                        "schema": {
                            "$ref": "#/definitions/routes.DefaultMessageResponse"
                        }
                    },
                    "500": {
                        "description": "message\": \"Internal server error",
                        "schema": {
                            "$ref": "#/definitions/routes.DefaultMessageResponse"
                        }
                    }
                }
            }
        },
        "/api/profile": {
            "get": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Retrieves the profile of the authenticated user",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Profile"
                ],
                "summary": "Get current users profile",
                "responses": {
                    "200": {
                        "description": "User profile",
                        "schema": {
                            "$ref": "#/definitions/routes.UserProfileResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/routes.DefaultMessageResponse"
                        }
                    },
                    "404": {
                        "description": "User not found",
                        "schema": {
                            "$ref": "#/definitions/routes.DefaultMessageResponse"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/routes.DefaultMessageResponse"
                        }
                    }
                }
            },
            "put": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Retrieves the profile of the authenticated user",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Profile"
                ],
                "summary": "Update current users profile",
                "parameters": [
                    {
                        "description": "User object to be updated",
                        "name": "user",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/routes.UserProfileRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Profile updated",
                        "schema": {
                            "$ref": "#/definitions/routes.DefaultMessageResponse"
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "schema": {
                            "$ref": "#/definitions/routes.DefaultMessageResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/routes.DefaultMessageResponse"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/routes.DefaultMessageResponse"
                        }
                    }
                }
            }
        },
        "/api/seasons/movie/{id}": {
            "get": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Retrieves all seasons of the specified movie",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "seasons"
                ],
                "summary": "Retrieves all seasons of a movie",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Movie ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "All seasons of the movie",
                        "schema": {
                            "$ref": "#/definitions/routes.DefaultMessageResponse"
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "schema": {
                            "$ref": "#/definitions/routes.DefaultMessageResponse"
                        }
                    },
                    "404": {
                        "description": "No seasons found",
                        "schema": {
                            "$ref": "#/definitions/routes.DefaultMessageResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/routes.DefaultMessageResponse"
                        }
                    }
                }
            }
        },
        "/api/seasons/movie/{id}/clear": {
            "delete": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Deletes all seasons of the specified movie",
                "tags": [
                    "seasons"
                ],
                "summary": "Deletes all episodes seasons of a movie",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Movie ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "All Seasons of movie deleted",
                        "schema": {
                            "$ref": "#/definitions/routes.DefaultMessageResponse"
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "schema": {
                            "$ref": "#/definitions/routes.DefaultMessageResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/routes.DefaultMessageResponse"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/routes.DefaultMessageResponse"
                        }
                    }
                }
            }
        },
        "/api/seasons/movie/{id}/{seasonNumber}": {
            "delete": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Deletes all episodes of the specified season of a movie",
                "tags": [
                    "seasons"
                ],
                "summary": "Deletes all episodes of a specific season",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Movie ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "description": "Season number",
                        "name": "seasonNumber",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "All Season numbers deleted",
                        "schema": {
                            "$ref": "#/definitions/routes.DefaultMessageResponse"
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "schema": {
                            "$ref": "#/definitions/routes.DefaultMessageResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/routes.DefaultMessageResponse"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/routes.DefaultMessageResponse"
                        }
                    }
                }
            }
        },
        "/api/seasons/{id}": {
            "get": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Retrieves information about the season with the specified ID",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "seasons"
                ],
                "summary": "Retrieves information about a season",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Season ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Season information",
                        "schema": {
                            "$ref": "#/definitions/routes.DefaultMessageResponse"
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "schema": {
                            "$ref": "#/definitions/routes.DefaultMessageResponse"
                        }
                    },
                    "404": {
                        "description": "Season not found",
                        "schema": {
                            "$ref": "#/definitions/routes.DefaultMessageResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/routes.DefaultMessageResponse"
                        }
                    }
                }
            },
            "put": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Updates the details of a season with the specified ID",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "seasons"
                ],
                "summary": "Updates a season",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Season ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Updated season information",
                        "name": "season",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/routes.SeasonBodyRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Season updated",
                        "schema": {
                            "$ref": "#/definitions/routes.DefaultMessageResponse"
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "schema": {
                            "$ref": "#/definitions/routes.DefaultMessageResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/routes.DefaultMessageResponse"
                        }
                    },
                    "404": {
                        "description": "Season not found",
                        "schema": {
                            "$ref": "#/definitions/routes.DefaultMessageResponse"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/routes.DefaultMessageResponse"
                        }
                    }
                }
            },
            "post": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Creates a new season for the specified movie",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "seasons"
                ],
                "summary": "Creates a new season",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Movie ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Season Data",
                        "name": "seasonData",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/routes.SeasonBodyRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Season Added",
                        "schema": {
                            "$ref": "#/definitions/routes.DefaultMessageResponse"
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "schema": {
                            "$ref": "#/definitions/routes.DefaultMessageResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/routes.DefaultMessageResponse"
                        }
                    },
                    "404": {
                        "description": "Movie not found",
                        "schema": {
                            "$ref": "#/definitions/routes.DefaultMessageResponse"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/routes.DefaultMessageResponse"
                        }
                    }
                }
            },
            "delete": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Deletes a season with the specified ID",
                "tags": [
                    "seasons"
                ],
                "summary": "Deletes a season",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Season ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Season deleted",
                        "schema": {
                            "$ref": "#/definitions/routes.DefaultMessageResponse"
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "schema": {
                            "$ref": "#/definitions/routes.DefaultMessageResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/routes.DefaultMessageResponse"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/routes.DefaultMessageResponse"
                        }
                    }
                }
            }
        },
        "/api/seasons/{id}/multiple": {
            "post": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Creates multiple seasons for the specified movie",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "seasons"
                ],
                "summary": "Creates multiple seasons",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Movie ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Seasons",
                        "name": "seasonsData",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/routes.SeasonsBodyRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Season Added",
                        "schema": {
                            "$ref": "#/definitions/routes.DefaultMessageResponse"
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "schema": {
                            "$ref": "#/definitions/routes.DefaultMessageResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/routes.DefaultMessageResponse"
                        }
                    },
                    "404": {
                        "description": "Movie not found",
                        "schema": {
                            "$ref": "#/definitions/routes.DefaultMessageResponse"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/routes.DefaultMessageResponse"
                        }
                    }
                }
            }
        },
        "/api/send-code": {
            "post": {
                "description": "Sends a verification code to the provided email address",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "passwordChange"
                ],
                "summary": "Send verification code",
                "parameters": [
                    {
                        "description": "Email data",
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/routes.SendCodeRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Code sent",
                        "schema": {
                            "$ref": "#/definitions/routes.DefaultMessageResponse"
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "schema": {
                            "$ref": "#/definitions/routes.DefaultMessageResponse"
                        }
                    },
                    "404": {
                        "description": "User not found",
                        "schema": {
                            "$ref": "#/definitions/routes.DefaultMessageResponse"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/routes.DefaultMessageResponse"
                        }
                    }
                }
            }
        },
        "/api/signIn": {
            "post": {
                "description": "Sign in with email and password to obtain JWT token. Creditnails for sign in \"email\": \"big@example.com\",  \"password\": \"Aa12345678#\"",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "authentication"
                ],
                "summary": "Sign in",
                "parameters": [
                    {
                        "description": "Email and password",
                        "name": "body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/routes.SignInRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successfully signed in",
                        "schema": {
                            "$ref": "#/definitions/routes.SignInResponse"
                        }
                    },
                    "400": {
                        "description": "Invalid data format",
                        "schema": {
                            "$ref": "#/definitions/routes.DefaultMessageResponse"
                        }
                    },
                    "401": {
                        "description": "User does not exist or incorrect password",
                        "schema": {
                            "$ref": "#/definitions/routes.DefaultMessageResponse"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/routes.DefaultMessageResponse"
                        }
                    }
                }
            }
        },
        "/api/signUp": {
            "post": {
                "description": "Register a new user",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "authentication"
                ],
                "summary": "Sign up",
                "parameters": [
                    {
                        "description": "Email, password, and confirm password",
                        "name": "body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/routes.SignUpRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successfully registered",
                        "schema": {
                            "$ref": "#/definitions/routes.DefaultMessageResponse"
                        }
                    },
                    "400": {
                        "description": "Invalid email or password format",
                        "schema": {
                            "$ref": "#/definitions/routes.DefaultMessageResponse"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/routes.DefaultMessageResponse"
                        }
                    }
                }
            }
        },
        "/api/verify-code": {
            "post": {
                "description": "Verifies the verification code for the provided email address and generates a temporary password",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "passwordChange"
                ],
                "summary": "Verify verification code",
                "parameters": [
                    {
                        "description": "Verification code data",
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/routes.VerifyCodeRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Temporary password sent",
                        "schema": {
                            "$ref": "#/definitions/routes.DefaultMessageResponse"
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "schema": {
                            "$ref": "#/definitions/routes.DefaultMessageResponse"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/routes.DefaultMessageResponse"
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "age.AgeCategory": {
            "type": "object",
            "required": [
                "max_age",
                "min_age",
                "name"
            ],
            "properties": {
                "id": {
                    "type": "integer"
                },
                "max_age": {
                    "type": "integer"
                },
                "min_age": {
                    "type": "integer"
                },
                "name": {
                    "type": "string"
                },
                "note": {
                    "type": "string"
                },
                "user_id": {
                    "type": "integer"
                }
            }
        },
        "episode.Episode": {
            "type": "object",
            "required": [
                "duration_minutes",
                "episode_number",
                "name",
                "release_date",
                "url"
            ],
            "properties": {
                "description": {
                    "type": "string"
                },
                "duration_minutes": {
                    "type": "integer"
                },
                "episode_number": {
                    "type": "integer"
                },
                "id": {
                    "type": "integer"
                },
                "name": {
                    "type": "string"
                },
                "release_date": {
                    "type": "string"
                },
                "season_id": {
                    "type": "integer"
                },
                "url": {
                    "type": "string"
                },
                "user_id": {
                    "type": "integer"
                }
            }
        },
        "episodes.EpisodeRequest": {
            "type": "object",
            "required": [
                "duration_minutes",
                "episode_number",
                "name",
                "release_date",
                "url"
            ],
            "properties": {
                "description": {
                    "type": "string"
                },
                "duration_minutes": {
                    "type": "integer"
                },
                "episode_number": {
                    "type": "integer"
                },
                "name": {
                    "type": "string"
                },
                "release_date": {
                    "type": "string"
                },
                "url": {
                    "type": "string"
                }
            }
        },
        "episodes.EpisodeRequestBody": {
            "type": "object",
            "properties": {
                "episodes": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/episodes.EpisodeRequest"
                    }
                }
            }
        },
        "genres.Genre": {
            "type": "object",
            "required": [
                "description"
            ],
            "properties": {
                "description": {
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                },
                "name": {
                    "type": "string"
                },
                "user_id": {
                    "type": "integer"
                }
            }
        },
        "genres.GenreShort": {
            "type": "object",
            "required": [
                "description"
            ],
            "properties": {
                "description": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                }
            }
        },
        "movie.Movie": {
            "type": "object",
            "required": [
                "ageCategoryId",
                "categoryId",
                "description",
                "director",
                "durationMinutes",
                "genres",
                "keywords",
                "name",
                "producer",
                "year"
            ],
            "properties": {
                "ageCategory": {
                    "description": "one to many",
                    "type": "string"
                },
                "ageCategoryId": {
                    "type": "integer"
                },
                "category": {
                    "description": "one to many",
                    "type": "string"
                },
                "categoryId": {
                    "type": "integer"
                },
                "createdAt": {
                    "type": "string"
                },
                "description": {
                    "type": "string"
                },
                "director": {
                    "type": "string"
                },
                "durationMinutes": {
                    "type": "integer"
                },
                "genres": {
                    "description": "many to many table",
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "id": {
                    "type": "integer"
                },
                "isFavorite": {
                    "type": "boolean"
                },
                "keywords": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "posters": {
                    "description": "Maximum of 5 posters for one movie",
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "producer": {
                    "type": "string"
                },
                "seasonCount": {
                    "type": "integer"
                },
                "seriesCount": {
                    "type": "integer"
                },
                "updatedAt": {
                    "type": "string"
                },
                "userId": {
                    "type": "string"
                },
                "watchCount": {
                    "type": "integer"
                },
                "year": {
                    "type": "integer"
                }
            }
        },
        "movie.MovieShort": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "integer"
                },
                "mainPoster": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                }
            }
        },
        "routes.AgeCategoryRequest": {
            "type": "object",
            "required": [
                "max_age",
                "min_age",
                "name"
            ],
            "properties": {
                "max_age": {
                    "type": "integer"
                },
                "min_age": {
                    "type": "integer"
                },
                "name": {
                    "type": "string"
                },
                "note": {
                    "type": "string"
                }
            }
        },
        "routes.CategoryRequest": {
            "type": "object",
            "required": [
                "category_name",
                "description"
            ],
            "properties": {
                "category_name": {
                    "type": "string"
                },
                "description": {
                    "type": "string"
                }
            }
        },
        "routes.ChangePasswordRequest": {
            "type": "object",
            "required": [
                "confirmPassword",
                "newPassword",
                "oldPassword"
            ],
            "properties": {
                "confirmPassword": {
                    "type": "string"
                },
                "newPassword": {
                    "type": "string"
                },
                "oldPassword": {
                    "type": "string"
                }
            }
        },
        "routes.DefaultMessageResponse": {
            "type": "object",
            "properties": {
                "message": {
                    "type": "string"
                }
            }
        },
        "routes.EpisodeRequest": {
            "type": "object",
            "required": [
                "duration_minutes",
                "episode_number",
                "name",
                "release_date",
                "url"
            ],
            "properties": {
                "description": {
                    "type": "string"
                },
                "duration_minutes": {
                    "type": "integer"
                },
                "episode_number": {
                    "type": "integer"
                },
                "name": {
                    "type": "string"
                },
                "release_date": {
                    "type": "string"
                },
                "url": {
                    "type": "string"
                }
            }
        },
        "routes.ManyMoviesResponse": {
            "type": "object",
            "properties": {
                "movies": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/movie.Movie"
                    }
                }
            }
        },
        "routes.MovieCreateRequest": {
            "type": "object",
            "required": [
                "ageCategoryId",
                "categoryId",
                "description",
                "director",
                "durationMinutes",
                "genres",
                "keywords",
                "name",
                "producer",
                "year"
            ],
            "properties": {
                "ageCategoryId": {
                    "type": "integer"
                },
                "categoryId": {
                    "type": "integer"
                },
                "description": {
                    "type": "string"
                },
                "director": {
                    "type": "string"
                },
                "durationMinutes": {
                    "type": "integer"
                },
                "genres": {
                    "description": "many to many table",
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "keywords": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "producer": {
                    "type": "string"
                },
                "year": {
                    "type": "integer"
                }
            }
        },
        "routes.MovieDataRequest": {
            "type": "object",
            "required": [
                "description",
                "director",
                "durationMinutes",
                "keywords",
                "name",
                "producer",
                "year"
            ],
            "properties": {
                "description": {
                    "type": "string"
                },
                "director": {
                    "type": "string"
                },
                "durationMinutes": {
                    "type": "integer"
                },
                "keywords": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "producer": {
                    "type": "string"
                },
                "year": {
                    "type": "integer"
                }
            }
        },
        "routes.MovieGenresRequest": {
            "type": "object",
            "required": [
                "genres"
            ],
            "properties": {
                "genres": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                }
            }
        },
        "routes.MovieResponse": {
            "type": "object",
            "properties": {
                "movie": {
                    "$ref": "#/definitions/movie.Movie"
                }
            }
        },
        "routes.PostersBodyRequest": {
            "type": "object",
            "required": [
                "posters"
            ],
            "properties": {
                "posters": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                }
            }
        },
        "routes.SeasonBodyRequest": {
            "type": "object",
            "required": [
                "description",
                "name",
                "release_date",
                "season_number"
            ],
            "properties": {
                "description": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "release_date": {
                    "type": "string"
                },
                "season_number": {
                    "type": "integer"
                }
            }
        },
        "routes.SeasonsBodyRequest": {
            "type": "object",
            "required": [
                "seasons"
            ],
            "properties": {
                "seasons": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/routes.SeasonBodyRequest"
                    }
                }
            }
        },
        "routes.SendCodeRequest": {
            "type": "object",
            "required": [
                "email"
            ],
            "properties": {
                "email": {
                    "type": "string"
                }
            }
        },
        "routes.SignInRequest": {
            "type": "object",
            "required": [
                "email",
                "password"
            ],
            "properties": {
                "email": {
                    "type": "string"
                },
                "password": {
                    "type": "string"
                }
            }
        },
        "routes.SignInResponse": {
            "type": "object",
            "properties": {
                "message": {
                    "type": "string"
                },
                "token": {
                    "type": "string"
                }
            }
        },
        "routes.SignUpRequest": {
            "type": "object",
            "required": [
                "confirmPassword",
                "email",
                "password"
            ],
            "properties": {
                "confirmPassword": {
                    "type": "string"
                },
                "email": {
                    "type": "string"
                },
                "password": {
                    "type": "string"
                }
            }
        },
        "routes.UserProfileRequest": {
            "type": "object",
            "required": [
                "date_of_birth",
                "name",
                "phone"
            ],
            "properties": {
                "date_of_birth": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "phone": {
                    "type": "string"
                }
            }
        },
        "routes.UserProfileResponse": {
            "type": "object",
            "properties": {
                "dot": {
                    "type": "string"
                },
                "email": {
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                },
                "name": {
                    "type": "string"
                },
                "phone": {
                    "type": "string"
                },
                "role": {
                    "type": "string"
                }
            }
        },
        "routes.VerifyCodeRequest": {
            "type": "object",
            "required": [
                "code",
                "email"
            ],
            "properties": {
                "code": {
                    "type": "string"
                },
                "email": {
                    "type": "string"
                }
            }
        }
    }
}